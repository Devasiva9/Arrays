
The sieve of Eratosthenes is one of the most efficient ways to find all primes smaller than n when n is smaller than 10 million or so.

Following is the algorithm to find all the prime numbers less than or equal to a given integer n by the Eratostheneâ€™s method:
When the algorithm terminates, all the numbers in the list that are not marked are prime.

Approach
Complexity
Time complexity:
Space complexity:
Code
class Solution {
    public int countPrimes(int n) {
        if(n <= 1)
        {
            return 0;
        }
        boolean[] isPrime = new boolean[n];
        for(int i =0;i<n;i++)
        {
            isPrime[i] = true;
        }
        for(int i =2;i*i <n;i++)
        {
            if(isPrime[i])
            {
                for(int j=i*i;j<n;j=j+i)
                {
                    isPrime[j] = false;
                }
            }
        }
        int count = 0;
        for(int i =2;i<n;i++)
        {
            if(isPrime[i])
            {
                count++;
            }
        }
        return count;
    }
}
